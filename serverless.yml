# serverless.yml


service: luxarity-offchain
# The `provider` block defines where your service will be deployed
provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage, 'stg'}
  region: us-west-1 
  iamRoleStatements:
    - Effect: Allow
      Action:
      - KMS:Decrypt
      Resource: ${self:custom.kmsSecrets.keyArn}
    - Effect: Allow
      Action:
      - s3:*
      Resource: 'arn:aws:s3:::*'
    - Effect: Allow
      Action:
      - "lambda:InvokeFunction"
      Resource: "*"
    - Effect: Allow
      Action:
      - "sqs:ChangeMessageVisibility"
      - "sqs:DeleteMessage"
      - "sqs:GetQueueAttributes"
      - "sqs:ReceiveMessage"
      - "sqs:SendMessage"
      - "sqs:GetQueueUrl"
      - "sqs:listQueues"
      - "lambda:CreateEventSourceMapping"
      - "lambda:ListEventSourceMappings"
      - "lambda:ListFunction"
      Resource: "*"

  environment:
      SECRETS: ${self:custom.kmsSecrets.secrets.SECRETS}


plugins:
  - serverless-kms-secrets
  #- serverless-webpack


resources:
  Resources:
    newstgApplicationQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: "newstgApplicationQueue"
        VisibilityTimeout: 30 # 30 sec.
        MessageRetentionPeriod: 60 # 60 sec.
        RedrivePolicy:
          deadLetterTargetArn:
            "Fn::GetAtt":
              - ApplicationDeadLetterQueue
              - Arn
          maxReceiveCount: 2
    ApplicationDeadLetterQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: "newstgApplicationDLQ"
        MessageRetentionPeriod: 1209600 # 14 days in seconds
        
custom:
  serverless-kms-secrets:
    secretsFile: kms-secrets.${opt:stage, self:provider.stage}.${opt:region, self:provider.region}.yml
  kmsSecrets: ${file(kms-secrets.${opt:stage, self:provider.stage}.${opt:region, self:provider.region}.yml)}
  #webpackIncludeModules: true

functions:
  createComment:
    handler: handler.testEndpoint
    events:
      - http:
          path: testEndpoint
          method: get
          cors: true
  
  



